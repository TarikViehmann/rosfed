{% block info %}
Name:           ros-{{ distro }}-{{ pkg_name }}
Version:        {{ pkg_version }}
Release:        {{ pkg_release }}%{?dist}
Summary:        ROS package {{ pkg_name }}

License:        {{ license }}
URL:            {{ pkg_url }}
{% endblock %}

{% block sources %}
{% for url in source_urls -%}
Source{{ loop.index0 }}:        {{ url }}#/ros-{{ distro }}-{{ pkg_name }}-{{ pkg_version }}-source{{ loop.index0 }}.tar.gz
{% endfor %}
{% endblock %}

{% block patches %}
{% for patch in patches -%}
Patch{{ loop.index0 }}: {{ patch }}
{% endfor %}
{% endblock %}

{% if noarch == true %}
BuildArch: noarch
{% endif %}

{% block dependencies %}
{% for dep in build_dependencies.system %}
BuildRequires:  {{ dep }}
{% endfor %}
{% for dep in build_dependencies.ros %}
BuildRequires:  ros-{{ distro }}-{{ dep }}
{% endfor %}

{% for dep in run_dependencies.system %}
Requires:       {{ dep }}
{% endfor %}
{% for dep in run_dependencies.ros %}
Requires:       ros-{{ distro }}-{{ dep }}
{% endfor %}
{% endblock %}

%description
{% block description %}
{{ pkg_description }}
{% endblock %}


%prep
{% block prep %}

%setup -c -T
{% for url in source_urls %}
tar --strip-components=1 -xf %{SOURCE{{ loop.index0 }}}
{% endfor %}
{% for patch in patches %}
%patch{{ loop.index0 }} -p1
{% endfor %}
{% endblock %}

%build
{% block build %}
# nothing to do here
{% endblock %}


%install
{% block install_environment %}
CFLAGS="${CFLAGS:-%optflags}" ; export CFLAGS ; \
CXXFLAGS="${CXXFLAGS:-%optflags}" ; export CXXFLAGS ; \
FFLAGS="${FFLAGS:-%optflags%{?_fmoddir: -I%_fmoddir}}" ; export FFLAGS ; \
FCFLAGS="${FCFLAGS:-%optflags%{?_fmoddir: -I%_fmoddir}}" ; export FCFLAGS ; \
%{?__global_ldflags:LDFLAGS="${LDFLAGS:-%__global_ldflags}" ; export LDFLAGS ;} \
{% endblock %}
{% block install %}
source %{_libdir}/ros/setup.bash

DESTDIR=%{buildroot} ; export DESTDIR

catkin_make_isolated \
  -DCMAKE_BUILD_TYPE=RelWithDebInfo \
  --source . \
  --install \
  --install-space %{_libdir}/ros/ \
{% if build_flags %}
  --pkg {{ pkg_name }} \
  {{ build_flags }}
{% else %}
  --pkg {{ pkg_name }}
{% endif %}
grep -rIl "%{buildroot}" %{buildroot} | xargs sed -i "s:%{buildroot}::g"

rm -rf %{buildroot}/%{_libdir}/ros/{.catkin,.rosinstall,_setup*,setup*,env.sh}

find %{buildroot}/%{_libdir}/ros/{bin,etc,include,lib/pkgconfig,lib/python*/site-packages,share} \
  -mindepth 1 -maxdepth 1 | sed "s:%{buildroot}/::" > files.list
find %{buildroot}/%{_libdir}/ros/lib/ -mindepth 1 -maxdepth 1 -type f \
  | sed "s:%{buildroot}/::" >> files.list
find %{buildroot}/%{_libdir}/ros/lib/ -mindepth 1 -maxdepth 1 -type d \
  -name {{ pkg_name }} \
  | sed "s:%{buildroot}/::" >> files.list


find . -maxdepth 1 -type f -iname "*readme*" | sed "s:^:%%doc :" >> files.list
find . -maxdepth 1 -type f -iname "*license*" | sed "s:^:%%license :" >> files.list
{% endblock %}

%files -f files.list



%changelog
* {{ date }} {{ user_string }} - {{ pkg_version }}-{{ pkg_release }}
- Update auto-generated Spec file
